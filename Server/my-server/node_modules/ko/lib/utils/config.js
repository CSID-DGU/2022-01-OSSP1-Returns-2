"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const fs_1 = require("fs");
class Config {
    constructor() {
        this.babelPlugins = [];
        this.cwd = process.cwd();
    }
    static getInstance() {
        if (!Config.instance) {
            Config.instance = Object.freeze(new Config());
        }
        return Config.instance;
    }
    getFileRealPath(path) {
        return (0, path_1.isAbsolute)(path) ? path : (0, path_1.resolve)(this.cwd, path);
    }
    get userConf() {
        const userConfPath = this.getFileRealPath('ko.config.js');
        if ((0, fs_1.existsSync)(userConfPath)) {
            const userConf = require(userConfPath);
            return userConf;
        }
        else {
            throw new Error('user config file not exist, please check it!');
        }
    }
    get defaultPaths() {
        return {
            src: this.getFileRealPath('src'),
            dist: this.getFileRealPath('dist'),
            public: this.getFileRealPath('public'),
            html: this.getFileRealPath('public/index.html'),
            tsconfig: this.getFileRealPath('tsconfig.json'),
        };
    }
    get isProductionEnv() {
        const PROD = 'production';
        return process.env.NODE_ENV === PROD;
    }
}
exports.default = Config.getInstance();
