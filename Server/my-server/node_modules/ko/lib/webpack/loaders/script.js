"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getCacheIdentifier_1 = __importDefault(require("react-dev-utils/getCacheIdentifier"));
const config_1 = __importDefault(require("../../utils/config"));
const THREAD_LOADER = require.resolve('thread-loader');
const BABEL_LOADER = require.resolve('babel-loader');
const WORKER_LOADER = require.resolve('worker-loader');
const scriptLoader = [
    {
        test: /\.worker.[jt]s$/,
        loader: WORKER_LOADER,
        options: {
            inline: 'fallback',
        },
    },
    {
        test: /\.(t|j)sx?$/,
        include: (input) => {
            // internal modules dt-common compatible
            if (input.includes('node_modules/dt-common/src/')) {
                return true;
            }
            else if (input.includes('node_modules')) {
                return false;
            }
            else {
                return true;
            }
        },
        use: [
            {
                loader: THREAD_LOADER,
                options: {
                    workerNodeArgs: ['--max-old-space-size=4096'],
                    name: 'ko-js-pool',
                },
            },
            {
                loader: BABEL_LOADER,
                options: {
                    presets: [
                        [
                            require.resolve('babel-preset-ko-app'),
                            {
                                useAbsoluteRuntime: true,
                            },
                        ],
                    ],
                    plugins: config_1.default.isProductionEnv
                        ? [require.resolve('react-refresh/babel')]
                        : [],
                    babelrc: false,
                    configFile: false,
                    cacheIdentifier: (0, getCacheIdentifier_1.default)(config_1.default.isProductionEnv ? 'production' : '', ['babel-preset-ko-app', 'react-dev-utils', 'ko']),
                    cacheDirectory: true,
                    cacheCompression: false,
                    compact: config_1.default.isProductionEnv,
                },
            },
        ],
    },
];
exports.default = scriptLoader;
