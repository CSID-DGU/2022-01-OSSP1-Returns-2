#!/usr/bin/env node
'use strict';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = require("commander");
const build_1 = __importDefault(require("./actions/build"));
const dev_1 = __importDefault(require("./actions/dev"));
const program = new commander_1.Command();
const pkg = require('../package.json');
program
    .description('Project toolkit base on webpack,babel,eslint and prettier.')
    .version(pkg.version, '-v, --version')
    .usage('<command> [options]');
program
    .command('build')
    .description('build project')
    .option('--hash', 'output file name with hash')
    .option('-t,--ts,--typescript', 'support typescript')
    .option('-e,--esbuild', 'enable esbuild')
    .action((opts) => {
    process.env.NODE_ENV = 'production';
    const buildInstance = new build_1.default(opts);
    buildInstance.action();
});
program
    .command('dev')
    .description('start devServer')
    .option('-p, --port <port>', 'server start on which port', parseInt)
    .option('--host <host>', 'specify a host to use')
    .option('-t, --ts', 'support typescript')
    .option('-h, --hash', 'output file name with hash')
    .option('-a,--analyzer', 'support building analyzer')
    .action((opts) => {
    process.env.NODE_ENV = 'development';
    const devInstance = new dev_1.default(opts);
    devInstance.action();
});
program.parse();
